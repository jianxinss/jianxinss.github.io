<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[jianxin]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://localhost:4000/"/>
  <updated>2015-01-29T14:28:14.832Z</updated>
  <id>http://localhost:4000/</id>
  
  <author>
    <name><![CDATA[zhaojianxin]]></name>
    <email><![CDATA[jianxinss@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[MVVM]]></title>
    <link href="http://localhost:4000/2015/01/22/MVVM/"/>
    <id>http://localhost:4000/2015/01/22/MVVM/</id>
    <published>2015-01-22T07:49:13.000Z</published>
    <updated>2015-01-22T07:49:44.000Z</updated>
    <content type="html"><![CDATA[<p>依赖注入解决的是如何有效组织代码依赖模块的问题</p>
<p>var</p>
<p>MVVM 的全称是Model view viewModel 这种架构最初是由微软作为软件的展现层设计模式的规范提出，他是mvc 的衍生物。<br>MVVM 的模式的关注点在能够支持时间驱动的UI 开发平台，</p>
<p>对于这种模式的实现，大部分都是在通过view层生命数据绑定来和其他层分开，这样就方便饿前端开发人员和后端开发人员的分工，</p>
<p>前端人员在HTML 标签中写对view model 的绑定数据，mode 和view Model 是后端开发人员通过开发应用的逻辑来维护这两层</p>
<p>最近几年，mvvm 模式在javascript 中开始有人实现，目前 knockout  kendo mvvm 和 knockback.js   开发框架</p>
<h4 id="model">model</h4>
<p>model 代表特定领域的特定的数据或者应用所需要的数据，一个典型的特定领域的数据</p>
<p>model 仅仅关注数据信息，不关心任何行为，她不格式化数据或者影响在浏览器中得展现，将数据显示是view 层的业务，业务逻辑被封装在viewmodel 中，用来与model 进行交互</p>
<h4 id="view">view</h4>
<p>view 是应用当中和用户直接交互的部门，他是一个交互式的UI 来表示ViewModel 的状态，view 是被认为主动的，而不是被动得，i</p>
<h4 id="viewModel">viewModel</h4>
<p>view model 是一个专门用于数据转换的controller ，它可以把Model 的信息转换成view 中得信息。同事可以把view 传递的命令传递给Model<br>从这个意义上讲，viewModel， 但是它控制，view 很多的显示逻辑，同事view model也暴漏一些方法来维护view 的状态，根据view 的行为和事件更新model</p>
<h4 id="优点">优点</h4>
<ul>
<li>MVVM 使并行开发更加容易，使前端开发和后端开发人员互不影响</li>
<li>抽象化view 层， 减少了代码中ing的业务逻辑</li>
<li>viewModel 比事件驱动更容易测试</li>
<li>viewModel 的测试不用关系UI 的自动化和交互</li>
</ul>
<h4 id="缺点">缺点</h4>
<ul>
<li>对于简答的UI 使用MVVM有点太重</li>
<li>声明式的数据绑定不利于调试，因为命令式的代码可以和容易设置断点，这种模式不利于设置这样的断点</li>
<li>在大的应用中，在获取大量的概要前很难设计 视图模型层</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>依赖注入解决的是如何有效组织代码依赖模块的问题</p>
<p>var</p>
<p>MVVM 的全称是Model view viewModel 这种架构最初是由微软作为软件的展现层设计模式的规范提出，他是mvc 的衍生物。<br>MVVM 的模式的关注点在能够支持时间驱动的]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[javscript 原型]]></title>
    <link href="http://localhost:4000/2015/01/22/javscript-%E5%8E%9F%E5%9E%8B/"/>
    <id>http://localhost:4000/2015/01/22/javscript-原型/</id>
    <published>2015-01-22T07:48:02.000Z</published>
    <updated>2015-01-22T07:49:37.000Z</updated>
    <content type="html"><![CDATA[<h2 id="有关原型">有关原型</h2>
<h3 id="对象">对象</h3>
<h4 id="一切皆为对象">一切皆为对象</h4>
<p>javascript中的所有东西都是对象，对象是属性的集合数字、字符串、布尔值等原始值是‘伪对象’ 他们同同样拥有属性，但是在栈上分配是按值传递，其他对象是在堆上分配并按照引用传递</p>
<h4 id="对象的属性可以动态添加和删除">对象的属性可以动态添加和删除</h4>
<h4 id="除了宿主对象，其他对象皆是由构造函数创建">除了宿主对象，其他对象皆是由构造函数创建</h4>
<p>javascript 世界里没有类的东西，<br>当然可以使用类和实例等惯用语来描述javascript 中类似的行为，<br>但其机制是完全不同的，</p>
<p>javascript对象是由构造函数创建的，</p>
<p>每个对象都有constructor属性表示创建该对象的构造函数。</p>
<h3 id="原型">原型</h3>
<p>prototype 是构造函数的一个属性，<br>该属性指向一个对象，<br>而这个对象作为该构造函数所创建的所有实例的基引用，<br>可以把对象的基引用想象成一个自动创建的隐藏属性，<br>当访问对象的一个属性时，<br>首先要查找对象本身，找到则返回<br>找不到则查找base reference 对象的属性，<br>如果还找不到实际上还会沿着原型链向上查找</p>
<p>直至到根</p>
<p>只要没有被覆盖</p>
<p>对象原型的属性都能再所用的实例中找到。</p>
<h3 id="原型链">原型链</h3>
<p>修改prototype 指向的对象们还能修改prototype指向饿是哪一个对象，即为prototype 赋予一个不同的对象，这可以实现一种简单的继承。</p>
<p>如果先实例化一个对象，再为构造函数prototype 赋予一个不同的对象，将会已经创建的对象不在改变，新创建的对象基引用为新的原型对象，</p>
<p>所用的构造函数prototype 不能为空</p>
<p>P.prototype  = null无视、<br>Object 构造函数也有prototype 属性，该属性是只读的，可以为原型增加属性</p>
<p>但是不恩能够赋予不同的对象，<br>因此可以有多层的原型链<br>但是原型链的根必定为Object.prototype 这意味给Object 增加属性会影响所有的属性。</p>
<h3 id="构造函数和new_的本质">构造函数和new 的本质</h3>
<p>构造函数是一个地地道道 函数<br>一个函数之所以能成为构造函数，因为new</p>
<p> Test()在某个对象window上下文执行代码， this  指向这个对象，  new Test()  创建一个对象，并在对象上下文执行代码，然后返回这个对象。</p>
<p>假如有个函数</p>
<p>function Test(){}</p>
<p>创建一个的对象tmp</p>
<p>构造函数指向自己</p>
<p>基引用指向自己</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="有关原型">有关原型</h2>
<h3 id="对象">对象</h3>
<h4 id="一切皆为对象">一切皆为对象</h4>
<p>javascript中的所有东西都是对象，对象是属性的集合数字、字符串、布尔值等原始值是‘伪对象’ 他们同同样拥有属性，但是在栈上]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[javascript 正则表达式]]></title>
    <link href="http://localhost:4000/2015/01/22/javascript-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://localhost:4000/2015/01/22/javascript-正则表达式/</id>
    <published>2015-01-22T04:27:43.000Z</published>
    <updated>2015-01-22T04:30:01.000Z</updated>
    <content type="html"><![CDATA[<h4 id="正则表达式的特殊应用">正则表达式的特殊应用</h4>
<ul>
<li>匹配function()</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var <span class="keyword">a</span>  = <span class="string">"function (service, router, other) { var s = service(); var r = router();}"</span>;</div><div class="line"></div><div class="line"><span class="keyword">a</span>.<span class="built_in">match</span>(/^<span class="function"><span class="keyword">function</span>\<span class="title">s</span>*[^\<span class="params">(]*\(\s*([^\)</span>]*)\)/<span class="title">m</span>);</span></div><div class="line"></div><div class="line">console.<span class="built_in">log</span>(<span class="keyword">a</span>);</div><div class="line">[<span class="string">"function (service, router, other)"</span>, <span class="string">"service, router, other"</span>]</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h4 id="正则表达式的特殊应用">正则表达式的特殊应用</h4>
<ul>
<li>匹配function()</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[php 相关]]></title>
    <link href="http://localhost:4000/2015/01/19/php-%E7%9B%B8%E5%85%B3/"/>
    <id>http://localhost:4000/2015/01/19/php-相关/</id>
    <published>2015-01-19T04:12:41.000Z</published>
    <updated>2015-01-20T07:05:01.000Z</updated>
    <content type="html"><![CDATA[<h3 id="修改php_根目录的文件路径">修改php 根目录的文件路径</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo <span class="keyword">vim</span> /etc/apache2/httpd.<span class="keyword">conf</span></div></pre></td></tr></table></figure>

<h3 id="php-ini的路径">php.ini的路径</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/etc/</span>php.ini</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h3 id="修改php_根目录的文件路径">修改php 根目录的文件路径</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[位移运算符]]></title>
    <link href="http://localhost:4000/2015/01/09/%E4%BD%8D%E7%A7%BB%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://localhost:4000/2015/01/09/位移运算符/</id>
    <published>2015-01-09T02:54:33.000Z</published>
    <updated>2015-01-09T03:08:03.000Z</updated>
    <content type="html"><![CDATA[<p><code>&lt;&lt;</code> 左移运算符<br>实质是将对应数据的二进制文件逐位向高位移动。并在空出的位置补0 ，最高位溢出舍弃。</p>
<h5 id="例如">例如</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">5</span>;</div><div class="line">b = a &lt;&lt; <span class="number">1</span>;</div><div class="line"><span class="built_in">c</span> = a &lt;&lt; <span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">//  a = 5 = 0000 0000 0000 0101</span></div><div class="line"><span class="comment">// 左移1位 b = 0000 0000 0000 1010 = 10</span></div><div class="line"><span class="comment">// 左移2位 c = 0000 0000 0001 0100 = 20</span></div></pre></td></tr></table></figure>

<p>可以看出来， 左移运算符主要用来做 2 乘法</p>
<p><code>&gt;&gt;</code> 右移运算符<br>实质是将对应数据的二进制文件逐位向低位移动。并在高位空出的位置补0 ，低位舍弃出界的数字。</p>
<h5 id="例如-1">例如</h5>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</div><div class="line">b = a &gt;&gt; <span class="number">1</span>;</div><div class="line"><span class="built_in">c</span> = a &gt;&gt; <span class="number">2</span>;</div><div class="line"></div><div class="line"><span class="comment">//  a = 5 = 0000 0000 0000 1010</span></div><div class="line"><span class="comment">// 左移1位 b = 0000 0000 0000 0101 = 5</span></div><div class="line"><span class="comment">// 左移2位 c = 0000 0000 0001 0010 = 2</span></div></pre></td></tr></table></figure>

<p>可以看出来， 左移运算符主要用来做 2 的整除</p>
<p>由于位移运算符比乘法运算符速度提高很多，所以在处理数据的乘法运算时，采用位移运算符可以得到很快地速度。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>&lt;&lt;</code> 左移运算符<br>实质是将对应数据的二进制文件逐位向高位移动。并在空出的位置补0 ，最高位溢出舍弃。</p>
<h5 id="例如">例如</h5>
<figure class="highlight"><table><tr><td]]>
    </summary>
    
      <category term="运算符" scheme="http://localhost:4000/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
      <category term="位移" scheme="http://localhost:4000/tags/%E4%BD%8D%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端技能树]]></title>
    <link href="http://localhost:4000/2015/01/09/%E5%89%8D%E7%AB%AF%E6%8A%80%E8%83%BD%E6%A0%91/"/>
    <id>http://localhost:4000/2015/01/09/前端技能树/</id>
    <published>2015-01-09T01:58:55.000Z</published>
    <updated>2015-01-09T02:05:00.000Z</updated>
    <content type="html"><![CDATA[<h3 id="技能树">技能树</h3>
<p><img src="http://ww4.sinaimg.cn/mw690/62e9af2cjw1eo31hfpjlkj20vk0jc0ye.jpg" alt="tree"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="技能树">技能树</h3>
<p><img src="http://ww4.sinaimg.cn/mw690/62e9af2cjw1eo31hfpjlkj20vk0jc0ye.jpg" alt="tree"></p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[DOM ready 事件概述]]></title>
    <link href="http://localhost:4000/2015/01/08/DOM-ready-%E4%BA%8B%E4%BB%B6%E6%A6%82%E8%BF%B0/"/>
    <id>http://localhost:4000/2015/01/08/DOM-ready-事件概述/</id>
    <published>2015-01-08T03:30:22.000Z</published>
    <updated>2015-01-08T11:57:55.000Z</updated>
    <content type="html"><![CDATA[<h3 id="DOM_ready_事件概述">DOM ready 事件概述</h3>
<p>window 本身有一个window.onload事件，它是在页面所有资源都加载完成之后才触发，而当页面图片等大量资源需要加载时就会导致相应缓慢。window.onload 事件也就迟迟没法触发。<br>所以出现了DOM Ready 事件，这个事件在DOM文档结构准备完毕后，资源加载完成前触发。<br>因为有时候，我们需要在DOM 准备完毕后在修改DOM，如果DOM没有完成就会出现错误。</p>
<h3 id="DOM_ready_现状">DOM ready 现状</h3>
<ul>
<li><p>目前DOMContenLoaded 事件在需要webkit 浏览器以及IE9上都可以使用，此事件会在DOM 文档准备好以后触发，包含在HTML5 标准中，对于支持此事件的浏览器可以直接使用。</p>
</li>
<li><p>目前IE6，7，8 都不支持DOMContentLoaded 事件，所以目前做的主要工作是兼容IE6，7，8 使其兼容DOM ready事件。</p>
</li>
</ul>
<h3 id="对于IE6，7，8_的hack_方法">对于IE6，7，8  的hack 方法</h3>
<h4 id="1-setTimeout_检测">1.setTimeout 检测</h4>
<h4 id="2-监听readystatechange事件，判断readyState_状态是否为Complete，interactive_等触发">2.监听readystatechange事件，判断readyState 状态是否为Complete，interactive 等触发</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.onreadystatechange = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>{</div><div class="line">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.readyState);</div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="3-通过设置了script块的defer_属性实现">3.通过设置了script块的defer 属性实现</h4>
<h4 id="4-内部script：外部script_的改进版本。外部script_需要额外的js_文件，内部script_可以避免此问题">4.内部script：外部script 的改进版本。外部script 需要额外的js 文件，内部script 可以避免此问题</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.write(<span class="string">'&lt;script id=_ie_onload defer src=javascript: void(0)&gt;&lt;/script&gt;'</span>);</div><div class="line"><span class="keyword">var</span> script = <span class="built_in">document</span>.getElementById(<span class="string">'_ie_onload'</span>);</div><div class="line">script.onreadystatechange = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.readyState == <span class="string">'complete'</span>){</div><div class="line">        <span class="comment">//done</span></div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="5-微软的文档指出doScroll必须在DOM_主文档准备完毕之后才能正常触发，所以通过doScroll判断DOM_是否准备完毕">5.微软的文档指出doScroll必须在DOM 主文档准备完毕之后才能正常触发，所以通过doScroll判断DOM 是否准备完毕</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">IEContentLoaded</span><span class="params">(w,fn)</span></span>{</div><div class="line">    <span class="keyword">var</span> d = <span class="built_in">document</span>, done = <span class="literal">false</span>;</div><div class="line">    init = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">    <span class="comment">// 初始化方法 执行一次</span></div><div class="line">        <span class="keyword">if</span>(!done){</div><div class="line">            done = <span class="literal">true</span>;</div><div class="line">            fn();</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">    <span class="keyword">try</span>{</div><div class="line">    d.documentElement.doScroll(<span class="string">'left'</span>);</div><div class="line">    }<span class="keyword">catch</span>(e){</div><div class="line">        setTimeout(<span class="built_in">arguments</span>.callee, <span class="number">50</span>);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line"></div><div class="line">    }</div><div class="line">    <span class="comment">// 没有错误才执行用户的回调方法。</span></div><div class="line">    init();</div><div class="line"></div><div class="line">},<span class="number">1000</span>);</div><div class="line"></div><div class="line"><span class="comment">//  如果用户是在DomReady之后才绑定的方法</span></div><div class="line"></div><div class="line">d.onreadystatechange = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">    <span class="keyword">if</span>(d.readyState == <span class="string">'complete'</span>){</div><div class="line">        d.onreadstatechange = <span class="literal">null</span>;</div><div class="line">        init();</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h3 id="DOM_ready_事件概述">DOM ready 事件概述</h3>
<p>window 本身有一个window.onload事件，它是在页面所有资源都加载完成之后才触发，而当页面图片等大量资源需要加载时就会导致相应缓慢。window.onload 事件也就迟迟]]>
    </summary>
    
      <category term="DOM" scheme="http://localhost:4000/tags/DOM/"/>
    
      <category term="Ready" scheme="http://localhost:4000/tags/Ready/"/>
    
      <category term="兼容性" scheme="http://localhost:4000/tags/%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[W3C Vs IE]]></title>
    <link href="http://localhost:4000/2015/01/07/W3C-Vs-IE/"/>
    <id>http://localhost:4000/2015/01/07/W3C-Vs-IE/</id>
    <published>2015-01-07T12:46:36.000Z</published>
    <updated>2015-01-09T02:17:53.000Z</updated>
    <content type="html"><![CDATA[<h3 id="前言">前言</h3>
<p>W3C : <code>word wide web</code>万维网联盟，是web技术领域具权威和影响力的国际中立性技术标准机构。<br>W3C最主要的工作就是发展web 规范（recommendations）。这些规范描述了web 通信协议（比如HTML 和 XHTML ）和其他的构建模块</p>
<p>目前对W3C 标准支持良好的浏览器，chrome，firefox，Opera 都很好，只有IE 最差，使用IE作为内核的浏览器（包括遨游，360安全浏览器等），<br>也对W3C部分标准不兼容</p>
<h3 id="一、文档结构（DOM）">一、文档结构（DOM）</h3>
<h4 id="盒子模型">盒子模型</h4>
<p>盒子模型包含content padding border margin<br>不同的是W3c 模型content 什么都不包含而IE盒子模型 包含了border 跟padding</p>
<h5 id="W3C_标准盒子模型">W3C 标准盒子模型</h5>
<p><img src="http://ww3.sinaimg.cn/mw690/62e9af2cjw1eo1dvh3zjlj20kq0cnadg.jpg" alt="W3C"></p>
<h5 id="IE_盒子模型">IE 盒子模型</h5>
<p><img src="http://ww2.sinaimg.cn/mw690/62e9af2cjw1eo1dvhaz4cj20lz0cugow.jpg" alt="IE"></p>
<h3 id="二、事件流（event）">二、事件流（event）</h3>
<p>W3C的事件流：从根节点（html）开始遍历所有的子节点，如果目标事件的父节点设置为捕获时触发，则执行该事件，直到目标被执行，然后再进行事件冒泡（设置为捕获时触发的事件将不再执行）</p>
<p>IE 事件流：从目标事件被执行，然后再冒泡到父节点的事件，直到根文档</p>
<h3 id="三、">三、</h3>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="前言">前言</h3>
<p>W3C : <code>word wide web</code>万维网联盟，是web技术领域具权威和影响力的国际中立性技术标准机构。<br>W3C最主要的工作就是发展web 规范（recommendations）。这些规范描述了web]]>
    </summary>
    
      <category term="W3C标准" scheme="http://localhost:4000/tags/W3C%E6%A0%87%E5%87%86/"/>
    
      <category term="IE标准" scheme="http://localhost:4000/tags/IE%E6%A0%87%E5%87%86/"/>
    
      <category term="盒子模型" scheme="http://localhost:4000/tags/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
    
      <category term="W3C标准差异" scheme="http://localhost:4000/categories/W3C%E6%A0%87%E5%87%86%E5%B7%AE%E5%BC%82/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[响应式布局]]></title>
    <link href="http://localhost:4000/2014/12/25/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/"/>
    <id>http://localhost:4000/2014/12/25/响应式布局/</id>
    <published>2014-12-25T12:07:52.000Z</published>
    <updated>2014-12-25T12:17:16.000Z</updated>
    <content type="html"><![CDATA[<h3 id="实现响应式布局的方式">实现响应式布局的方式</h3>
<ul>
<li>css3-Media Query （最简单）</li>
<li>借助原生javascript （代码量）</li>
<li>第三方控制框架</li>
</ul>
<p>外联样式表<br>内嵌样式表</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="实现响应式布局的方式">实现响应式布局的方式</h3>
<ul>
<li>css3-Media Query （最简单）</li>
<li>借助原生javascript （代码量）</li>
<li>第三方控制框架</li>
</ul>
<p>外联样式表<br>内嵌]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[webim]]></title>
    <link href="http://localhost:4000/2014/12/25/webim/"/>
    <id>http://localhost:4000/2014/12/25/webim/</id>
    <published>2014-12-25T07:21:51.000Z</published>
    <updated>2014-12-25T07:43:57.000Z</updated>
    <content type="html"><![CDATA[<h3 id="webim_总结">webim 总结</h3>
<p>从接手webim到现在，已经两年多，webim作为全微博最重要的通讯产品从起先v4版本的，历经v5的蜕变，v6的升华走到现在这个成熟稳定的状态。</p>
<p>webim 从简单无层次划分的架构，到v6版本的观察者模式，再到集合打包，压缩，测试，布置环境等一系列自动流水化操作。webim强大，成熟，稳定。</p>
<p>下面我将会从思想理念，技术架构，未来展望等四个方面记录在webim工作这几年的点点滴滴</p>
<h3 id="思想">思想</h3>
<h4 id="为什么要做webim">为什么要做webim</h4>
<h4 id="如何看待即时通讯在各大网站上得应用">如何看待即时通讯在各大网站上得应用</h4>
<h4 id="怎么做webim">怎么做webim</h4>
<h4 id="webim_存亡">webim 存亡</h4>
<h3 id="技术架构">技术架构</h3>
<h4 id="webim_从启动、服务器连接，到UI_展示，更新的过程">webim 从启动、服务器连接，到UI 展示，更新的过程</h4>
<h4 id="组件的依赖关系">组件的依赖关系</h4>
<h4 id="事件交互模型">事件交互模型</h4>
<h4 id="控件的标准化">控件的标准化</h4>
<h4 id="风险控制(测试)">风险控制(测试)</h4>
<h4 id="故障处理策略">故障处理策略</h4>
<h4 id="远端代码调试">远端代码调试</h4>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="webim_总结">webim 总结</h3>
<p>从接手webim到现在，已经两年多，webim作为全微博最重要的通讯产品从起先v4版本的，历经v5的蜕变，v6的升华走到现在这个成熟稳定的状态。</p>
<p>webim 从简单无层次划分的架构，到v6版本的观]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[HTML5 总结]]></title>
    <link href="http://localhost:4000/2014/12/24/HTML5-%E6%80%BB%E7%BB%93/"/>
    <id>http://localhost:4000/2014/12/24/HTML5-总结/</id>
    <published>2014-12-24T09:26:18.000Z</published>
    <updated>2014-12-26T02:24:33.000Z</updated>
    <content type="html"><![CDATA[<h1 id="标签">标签</h1>
<h3 id="可以进行省略的标签">可以进行省略的标签</h3>
<h4 id="1-_不允许写的结束符标签">1. 不允许写的结束符标签</h4>
<p>area, basebr, col, command, embed, hr, img, input, keygen, link, meta, param, source, track, wbr</p>
<h4 id="2-可以省略结束符的标签">2.可以省略结束符的标签</h4>
<p>li, dt, dd, p, rt, optgroup, option, colgroup, thread, tbody, tr, td, th</p>
<h4 id="3-可以完全省略的标签">3.可以完全省略的标签</h4>
<p>html, head, body, colgroup, tbody</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"zh-CN"</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

<h3 id="新增的结构标签">新增的结构标签</h3>
<h4 id="结构标签">结构标签</h4>
<ul>
<li>section 标签<br>表示页面中的一个内容区块，比如章节，页眉，页脚或页面的其他部分。可以用h1,h2,… 结合起来使用，表示文档结构。<br>html5中<section></section> HTML4 中<div></div></li>
<li><p>article 标签<br>表示页面中一块与上下文不相关的独立内容，比如一篇文章</p>
</li>
<li><p>aside 标签<br>表示article标签内容之外的，与article 标签内容相关的辅助信息</p>
</li>
<li><p>header 标签<br>表示页面中一个内容区块或整个页面的标题</p>
</li>
<li><p>hgroup 标签</p>
</li>
</ul>
<p>表示对整个页面或者页面中的一个内容区块的标题进行组合</p>
<ul>
<li>footer 标签</li>
</ul>
<p>表示整个页面或一根荣区块的注脚。一般来说，他会包含作者的姓名，创造日期以及创作者的联系信息</p>
<ul>
<li>nav 标签<br>表示页面中导航连接的部分</li>
<li>figure标签<br>表示一段独立的流内容，一般表示文档主题流中得独立单元</li>
</ul>
<h4 id="表单标签">表单标签</h4>
<h4 id="媒体标签">媒体标签</h4>
<ul>
<li>video 标签</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">video</span> <span class="attribute">src</span>=<span class="value">""</span>&gt;</span><span class="tag">&lt;/<span class="title">video</span>&gt;</span></div></pre></td></tr></table></figure>

<ul>
<li>audio 标签</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">audio</span> <span class="attribute">src</span>=<span class="value">""</span>&gt;</span><span class="tag">&lt;/<span class="title">audio</span>&gt;</span></div></pre></td></tr></table></figure>

<ul>
<li>embed 标签</li>
</ul>
<h4 id="其他功能标签">其他功能标签</h4>
<h3 id="废除的标签">废除的标签</h3>
<h4 id="可以用css_表示的代替的标签">可以用css 表示的代替的标签</h4>
<h4 id="不再使用frame">不再使用frame</h4>
<h4 id="只有个别浏览器支持的标签">只有个别浏览器支持的标签</h4>
<h4 id="其他不常用的标签">其他不常用的标签</h4>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="标签">标签</h1>
<h3 id="可以进行省略的标签">可以进行省略的标签</h3>
<h4 id="1-_不允许写的结束符标签">1. 不允许写的结束符标签</h4>
<p>area, basebr, col, command, embed, hr, im]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[centerOS VPS上 搭建VPN]]></title>
    <link href="http://localhost:4000/2014/12/24/centerOS-VPS%E4%B8%8A-%E6%90%AD%E5%BB%BAVPN/"/>
    <id>http://localhost:4000/2014/12/24/centerOS-VPS上-搭建VPN/</id>
    <published>2014-12-24T03:52:59.000Z</published>
    <updated>2014-12-24T09:19:04.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-准备工作">1.准备工作</h3>
<ul>
<li>删除 pptpd ppp</li>
<li>清除 配置文件</li>
</ul>
<h4 id="命令行如下">命令行如下</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum <span class="built_in">remove</span> -<span class="keyword">y</span> pptpd ppp</div><div class="line">/etc/init.<span class="keyword">d</span>/iptables <span class="keyword">stop</span></div><div class="line">rm -rf /etc/pptpd.<span class="keyword">conf</span></div><div class="line">rm -rf /etc/ppp</div></pre></td></tr></table></figure>

<h3 id="2-安装_pptpd">2.安装 pptpd</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="operator"><span class="keyword">install</span> ppp iptables</span></div></pre></td></tr></table></figure>

<h3 id="3-安装_pptpd_加入_yum_源">3.安装 pptpd 加入 yum 源</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://poptop.sourceforge.net/yum/stable/rhel6/pptp-<span class="operator"><span class="keyword">release</span>-<span class="keyword">current</span>.noarch.rpm</span></div><div class="line">yum <span class="keyword">install</span> pptpd</div></pre></td></tr></table></figure>

<h3 id="4-开启路由转发">4.开启路由转发</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">vi</span> /etc/sysctl.<span class="keyword">conf</span></div></pre></td></tr></table></figure>

<h4 id="(1)修改">(1)修改</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">&gt; net.ipv4.ip_forward </span>=<span class="string"> 1</span></div></pre></td></tr></table></figure>

<h4 id="(2)执行">(2)执行</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/sbin/</span>sysctl -p</div></pre></td></tr></table></figure>

<h3 id="5-配置">5.配置</h3>
<h4 id="(1)修改_/etc/ppp/options-pptpd">(1)修改 /etc/ppp/options.pptpd</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="title">vi</span> /etc/ppp/options.pptpd</div><div class="line">ms-dns <span class="number">4.2.2.1</span></div><div class="line">ms-dns <span class="number">4.2.2.2</span></div></pre></td></tr></table></figure>

<h4 id="(2)修改_/etc/pptpd-conf">(2)修改 /etc/pptpd.conf</h4>
<pre><code><span class="title">localip</span> <span class="number">10.8.8.1</span>
remoteip <span class="number">10.8.8.2</span>-<span class="number">245</span>
</code></pre><h4 id="(3)开机启动、运行">(3)开机启动、运行</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chkconfig pptpd <span class="command"><span class="keyword">on</span></span></div><div class="line">service pptpd start</div></pre></td></tr></table></figure>

<h4 id="(4)添加vpn_账号密码">(4)添加vpn 账号密码</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="operator">-e</span> <span class="string">'vpntest * vpntestpassword *'</span> &gt;&gt; /etc/ppp/chap-secrets</div><div class="line"><span class="built_in">echo</span> <span class="operator">-e</span> <span class="string">'vpn * 123456 *'</span> &gt;&gt; /etc/ppp/chap-secrets</div></pre></td></tr></table></figure>

<h4 id="(5)开启端口">(5)开启端口</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/sbin/i</span>ptables -A INPUT -p tcp --dport <span class="number">1723</span> -j ACCEPT</div><div class="line"><span class="regexp">/sbin/i</span>ptables -A INPUT -p tcp --dport <span class="number">47</span> -j ACCEPT</div><div class="line"><span class="regexp">/sbin/i</span>ptables -A INPUT -p gre -j ACCEPT</div></pre></td></tr></table></figure>

<h4 id="(6)允许外网vpn链接">(6)允许外网vpn链接</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">iptables</span> -A POSTROUTING -t nat -s <span class="number">10.8.8.0</span>/<span class="number">24</span> -o eth0 -j MASQUERADE</div></pre></td></tr></table></figure>

<h4 id="(7)_保存，执行">(7) 保存，执行</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">service</span> <span class="title">iptables</span> save</span></div><div class="line">service iptables start</div></pre></td></tr></table></figure>

<h6 id="只允许规定数据包转发-即只允许内网规定的IP上网…">只允许规定数据包转发..即只允许内网规定的IP上网…</h6>
<h3 id="6-_问题">6. 问题</h3>
<p>VPN 已经链接上但是没有数据包的发送跟接受</p>
<figure class="highlight `"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="title">iptables</span> -A POSTROUTING -t nat -s <span class="number">10.8.8.0</span>/<span class="number">24</span> -o eth0 -j MASQUERADE</div><div class="line">service iptables save</div></pre></td></tr></table></figure>

<h4 id="注意在修改了iptables后_需要save">注意在修改了iptables后 需要save</h4>
<h4 id="10-8-8-0_要与_localip（10-8-8-1）相一致">10.8.8.0 要与 localip（10.8.8.1）相一致</h4>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1-准备工作">1.准备工作</h3>
<ul>
<li>删除 pptpd ppp</li>
<li>清除 配置文件</li>
</ul>
<h4 id="命令行如下">命令行如下</h4>
<figure class="highlight"><table><tr]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[centerOS 中yum命令的使用总结]]></title>
    <link href="http://localhost:4000/2014/12/24/centerOS-%E4%B8%ADyum%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://localhost:4000/2014/12/24/centerOS-中yum命令的使用总结/</id>
    <published>2014-12-24T03:24:37.000Z</published>
    <updated>2014-12-25T07:28:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="yum_参数">yum 参数</h3>
<ul>
<li>-y 自动选择y，全自动 ,不带y 手动选择</li>
</ul>
<h3 id="yum_命令">yum 命令</h3>
<ul>
<li><p>yum update</p>
</li>
<li><p>yum install</p>
</li>
<li><p>yum remove</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="yum_参数">yum 参数</h3>
<ul>
<li>-y 自动选择y，全自动 ,不带y 手动选择</li>
</ul>
<h3 id="yum_命令">yum 命令</h3>
<ul>
<li><p>yum update</p>
</li>
<li><p>y]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[I can]]></title>
    <link href="http://localhost:4000/2014/12/24/I%20Can/"/>
    <id>http://localhost:4000/2014/12/24/I Can/</id>
    <published>2014-12-23T16:07:07.000Z</published>
    <updated>2014-12-23T16:35:18.000Z</updated>
    <content type="html"><![CDATA[<h3 id="技能表">技能表</h3>
<ul>
<li><p>HTML5  CSS3<br>  熟练掌握基础<br>  需要做出一个Demo 页面<br>  在手机上展示的页面<br>  HTML5解决方案</p>
</li>
<li><p>设计模式<br>  设计模式在webim 上的应用<br>  webim 的架构图</p>
</li>
<li><p>面向对象编程</p>
</li>
<li>浏览器差异</li>
<li>AJAX 具体</li>
<li><p>NodeJS</p>
</li>
<li><p>框架<br>  web 前端框架</p>
</li>
<li><p>性能<br>  web 标准化<br>  性能优化的方法<br>  可用性<br>  可访问性<br>  兼容性</p>
</li>
</ul>
<ul>
<li>自我认知方面<br>  自我的管理能力<br>  健康的创业心态<br>  快速的学习能力<br>  乐于分享沟通</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="技能表">技能表</h3>
<ul>
<li><p>HTML5  CSS3<br>  熟练掌握基础<br>  需要做出一个Demo 页面<br>  在手机上展示的页面<br>  HTML5解决方案</p>
</li>
<li><p>设计模式<br>  设计模式在w]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[FileReader]]></title>
    <link href="http://localhost:4000/2014/12/22/FileReader/"/>
    <id>http://localhost:4000/2014/12/22/FileReader/</id>
    <published>2014-12-22T11:44:58.000Z</published>
    <updated>2014-12-22T11:54:36.000Z</updated>
    <content type="html"><![CDATA[<p>FileReader 功能是从文件中读取数据，保存到js变量中，</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>FileReader 功能是从文件中读取数据，保存到js变量中，</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Blob]]></title>
    <link href="http://localhost:4000/2014/12/22/Blob/"/>
    <id>http://localhost:4000/2014/12/22/Blob/</id>
    <published>2014-12-22T10:40:20.000Z</published>
    <updated>2014-12-22T11:39:12.000Z</updated>
    <content type="html"><![CDATA[<h2 id="概述">概述</h2>
<p>一个Blob 对象代表一个类似文件的不可变对象，包含原始数据。Blobs代表的数据不一定是javascript 的原生格式数据。文件接口是基于Blob之上的，<br>继承了blob 的方法并且扩展到支持用户的系统文件 。</p>
<p>构建一个Blob 的简单方法是通过调用Blob() 的构造函数。另外一个方法是使用slice() 方法创建一个包含Blob 数据子集的Blob 数据</p>
<h2 id="构造方法">构造方法</h2>
<p>Blob() 返回一个新建的Blob对象。</p>
<h2 id="属性">属性</h2>
<p>Blob.size <code>readonly</code><br>   bytes 参数单位是bytes</p>
<p>Blob.type <code>readonly</code><br>   返回blob 的数据类型。如果类型未知，返回一个空字符串</p>
<h2 id="方法">方法</h2>
<p>Blob.slice<br>    返回一个包含了从原对象指定返回字节的新的Blob 对象。</p>
<h2 id="示例">示例</h2>
<h4 id="one_创建一个Blob_对象">one 创建一个Blob 对象</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> aFileParts = ['&lt;a id=<span class="string">"a"</span>&gt;&lt;b id=<span class="string">"b"</span>&gt;hey!&lt;/b&gt;&lt;/a&gt;'];</div><div class="line"><span class="keyword">var</span> oMyBlob = <span class="keyword">new</span> Blob(aFileParts, {<span class="keyword">type</span> : <span class="symbol">'text</span>/html'}); <span class="comment">// the blob</span></div><div class="line"><span class="comment">//Blob {type: "text/html", size: 32, slice: function}size: 32type: "text/html"__proto__: Blob}</span></div></pre></td></tr></table></figure>

<h4 id="two_返回一个url">two 返回一个url</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//var typedArray = GetTheTypedArraySomehow();</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> typedArray = <span class="symbol">'123456789</span>0';</div><div class="line"><span class="keyword">var</span> blob = <span class="keyword">new</span> Blob([typedArray], {<span class="keyword">type</span>: <span class="symbol">'application</span>/octet-binary'}); <span class="comment">// pass a useful mime type here</span></div><div class="line"><span class="keyword">var</span> url = URL.createObjectURL(blob);</div><div class="line"><span class="comment">// url will be something like: blob:d3958f5c-0777-0845-9dcf-2cb28783acaf</span></div><div class="line"><span class="comment">// now you can use the url in any context that regular URLs can be used in, for example img.src, etc.</span></div></pre></td></tr></table></figure>

<h4 id="从Blob读取数据">从Blob读取数据</h4>
<p>唯一的方法是使用 FileReader</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> reader = new <span class="type">FileReader</span>();</div><div class="line">reader.addEventListener(<span class="string">"loadend"</span>, function(data) {</div><div class="line">    console.log('data',data);</div><div class="line">    // 返回的数据是 <span class="number">10</span></div><div class="line">   // reader.<span class="literal">result</span> contains the contents <span class="keyword">of</span> blob <span class="keyword">as</span> a typed <span class="type">array</span></div><div class="line">});</div><div class="line">reader.readAsArrayBuffer(blob);</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="概述">概述</h2>
<p>一个Blob 对象代表一个类似文件的不可变对象，包含原始数据。Blobs代表的数据不一定是javascript 的原生格式数据。文件接口是基于Blob之上的，<br>继承了blob 的方法并且扩展到支持用户的系统文件 。</p>
<p]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://localhost:4000/2014/12/22/hello-world/"/>
    <id>http://localhost:4000/2014/12/22/hello-world/</id>
    <published>2014-12-22T02:02:25.000Z</published>
    <updated>2014-12-21T05:44:11.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo主题]]></title>
    <link href="http://localhost:4000/2014/12/21/readme/"/>
    <id>http://localhost:4000/2014/12/21/readme/</id>
    <published>2014-12-21T06:23:25.000Z</published>
    <updated>2015-01-07T16:58:31.000Z</updated>
    <content type="html"><![CDATA[<h1 id="几个重要的命令">几个重要的命令</h1>
<h3 id="编写新的文章">编写新的文章</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="string">'新的文章'</span></div></pre></td></tr></table></figure>

<h3 id="生成静态页面">生成静态页面</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">generate</span></div></pre></td></tr></table></figure>

<h3 id="发布文章到gitHub">发布文章到gitHub</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">hexo</span> deploy</div></pre></td></tr></table></figure>

<h1 id="Landscape">Landscape</h1>
<p>A brand new default theme for <a href="http://zespia.tw/hexo/" target="_blank" rel="external">Hexo</a>.</p>
<ul>
<li><a href="http://hexo.io/hexo-theme-landscape/" target="_blank" rel="external">Preview</a></li>
</ul>
<h2 id="Installation">Installation</h2>
<h3 id="Install">Install</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/hexojs/hexo-theme-landscape.git themes/landscape</div></pre></td></tr></table></figure>

<p><strong>Landscape requires Hexo 2.4 and above.</strong></p>
<h3 id="Enable">Enable</h3>
<p>Modify <code>theme</code> setting in <code>_config.yml</code> to <code>landscape</code>.</p>
<h3 id="Update">Update</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> themes/landscape</div><div class="line">git pull</div></pre></td></tr></table></figure>

<h2 id="Configuration">Configuration</h2>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># Header</span></div><div class="line"><span class="label">menu:</span></div><div class="line">  Home: /</div><div class="line">  Archives: /archives</div><div class="line"><span class="label">rss:</span> /atom.xml</div><div class="line"></div><div class="line"><span class="preprocessor"># Content</span></div><div class="line"><span class="label">excerpt_link:</span> Read More</div><div class="line"><span class="label">fancybox:</span> true</div><div class="line"></div><div class="line"><span class="preprocessor"># Sidebar</span></div><div class="line"><span class="label">sidebar:</span> right</div><div class="line"><span class="label">widgets:</span></div><div class="line">- category</div><div class="line">- tag</div><div class="line">- tagcloud</div><div class="line">- archives</div><div class="line">- recent_posts</div><div class="line"></div><div class="line"><span class="preprocessor"># Miscellaneous</span></div><div class="line"><span class="label">google_analytics:</span></div><div class="line"><span class="label">favicon:</span> /favicon.png</div><div class="line"><span class="label">twitter:</span></div><div class="line"><span class="label">google_plus:</span></div></pre></td></tr></table></figure>

<ul>
<li><strong>menu</strong> - Navigation menu</li>
<li><strong>rss</strong> - RSS link</li>
<li><strong>excerpt_link</strong> - “Read More” link at the bottom of excerpted articles. <code>false</code> to hide the link.</li>
<li><strong>fancybox</strong> - Enable <a href="http://fancyapps.com/fancybox/" target="_blank" rel="external">Fancybox</a></li>
<li><strong>sidebar</strong> - Sidebar style. You can choose <code>left</code>, <code>right</code>, <code>bottom</code> or <code>false</code>.</li>
<li><strong>widgets</strong> - Widgets displaying in sidebar</li>
<li><strong>google_analytics</strong> - Google Analytics ID</li>
<li><strong>favicon</strong> - Favicon path</li>
<li><strong>twitter</strong> - Twiiter ID</li>
<li><strong>google_plus</strong> - Google+ ID</li>
</ul>
<h2 id="Features">Features</h2>
<h3 id="Fancybox">Fancybox</h3>
<p>Landscape uses <a href="http://fancyapps.com/fancybox/" target="_blank" rel="external">Fancybox</a> to showcase your photos. You can use Markdown syntax or fancybox tag plugin to add your photos.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![<span class="link_label">img caption</span>](<span class="link_url">img url</span>)</div><div class="line"></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="title">hexoescape</span>&gt;</span></span>0<span class="xml"><span class="tag">&lt;/<span class="title">hexoescape</span>&gt;</span></span></div></pre></td></tr></table></figure>

<h3 id="Sidebar">Sidebar</h3>
<p>You can put your sidebar in left side, right side or bottom of your site by editing <code>sidebar</code> setting.</p>
<p>Landscape provides 5 built-in widgets:</p>
<ul>
<li>category</li>
<li>tag</li>
<li>tagcloud</li>
<li>archives</li>
<li>recent_posts</li>
</ul>
<p>All of them are enabled by default. You can edit them in <code>widget</code> setting.</p>
<h2 id="Development">Development</h2>
<h3 id="Requirements">Requirements</h3>
<ul>
<li><a href="http://gruntjs.com/" target="_blank" rel="external">Grunt</a> 0.4+</li>
<li>Hexo 2.4+</li>
</ul>
<h3 id="Grunt_tasks">Grunt tasks</h3>
<ul>
<li><strong>default</strong> - Download <a href="http://fancyapps.com/fancybox/" target="_blank" rel="external">Fancybox</a> and <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a>.</li>
<li><strong>fontawesome</strong> - Only download <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a>.</li>
<li><strong>fancybox</strong> - Only download <a href="http://fancyapps.com/fancybox/" target="_blank" rel="external">Fancybox</a>.</li>
<li><strong>clean</strong> - Clean temporarily files and downloaded files.</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="几个重要的命令">几个重要的命令</h1>
<h3 id="编写新的文章">编写新的文章</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[闭包]]></title>
    <link href="http://localhost:4000/2014/12/21/%E9%97%AD%E5%8C%85/"/>
    <id>http://localhost:4000/2014/12/21/闭包/</id>
    <published>2014-12-21T06:21:03.000Z</published>
    <updated>2015-01-22T09:03:14.000Z</updated>
    <content type="html"><![CDATA[<p>如何向一个小孩子介绍闭包呢</p>
<p>以上是摘要<br><a id="more"></a><br>以下是余下全文</p>
<p>如何向一个小孩子介绍闭包呢<br>如何向一个小孩子介绍闭包呢</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="variable">id=</span><span class="string">"canvas-container"</span> <span class="variable">align=</span><span class="string">"center"</span>&gt;</div><div class="line"> &lt;canvas <span class="variable">id=</span><span class="string">"canvas"</span> <span class="variable">width=</span><span class="string">"800px"</span> <span class="variable">height=</span><span class="string">"600px"</span>&gt;&lt;/canvas&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>

<h2 id="闭包">闭包</h2>
<h4 id="闭包的定义">闭包的定义</h4>
<ul>
<li><p>变量的作用域（全局变量、局部变量）</p>
</li>
<li><p>函数内部可以读取全局变量，函数外的变量</p>
</li>
<li><p>函数外部无法读取函数内的局部变量</p>
</li>
<li><p>函数内部一定需要用var 命令，不用的话实际上声明了一个全局变量</p>
</li>
<li><p>如何从函数外部读取局部变量呢。</p>
</li>
</ul>
<p>方法： 在函数内部再次定义一个函数。</p>
<p>==闭包== 就是能够读取其它函数内部变量的函数。</p>
<h4 id="闭包结构">闭包结构</h4>
<h4 id="闭包作用">闭包作用</h4>
<ol>
<li>他可以读取函数内部的变量</li>
<li>让这些变量的值始终保持在内存中</li>
</ol>
<h4 id="闭包逻辑">闭包逻辑</h4>
<ul>
<li>所谓“闭包”，<br>就是在构造函数<code>(A)</code>体内定义另外的函数<code>(F)</code>作为目标对象<code>(T)</code>的方法函数，<br>而这个对象<code>(T)</code>的方法函数<code>F</code>反过来引用外层函数体中的临时变量。<br>这使得只要目标对象在生存周期内保持其方法，<br>就能间接保持原来构造函数体当时用的临时变量值。<br>尽管最开始的构造函数调用已经结束，临时变量的名称也消失了，<br>但是目前对象的方法却始终能引用改变量的值，<br>而该值只能通过这种方法访问。即使再次调用相同的构造函数。<br>但是只会产生新的对象和方法，新的临时变量对应新的值，和上次调用的都是各自独立的</li>
</ul>
<ul>
<li>闭包的作用就是在a执行完成并返回后，闭包使得javascript 垃圾回收机制不会收回a所占用的资源，因为a 的内部函数b 执行需要依赖a 的变量。</li>
</ul>
<h4 id="如何产生闭包">如何产生闭包</h4>
<ul>
<li>当函数a的内部函数b被函数a外的一个变量引用的时候，就创建了一个闭包。</li>
</ul>
<p>闭包的微观世界<br>函数的执行环境：excution context<br>活动对象：call objec<br>所用域 ： scope<br>作用域链： scope chain</p>
<h3 id="闭包在项目中的应用">闭包在项目中的应用</h3>
<h4 id="闭包的劣势">闭包的劣势</h4>
<ul>
<li>闭包会使得函数中的变量都被保存在内存中，内存会有消耗，所以不能滥用闭包。否则会造成网页的性能问题。在IE 中会有泄漏。解决方法是在推出函数之前，将不使用的局部变量全部删除。</li>
<li>闭包会在父函数的外部，改变父函数内部变量的值。所以，如果把父函数当作对象（object）使用，把闭包当作他的公用方法，把内部变量当成私有属性，那么可能改变函数内部变量的值</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>如何向一个小孩子介绍闭包呢</p>
<p>以上是摘要<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[test]]></title>
    <link href="http://localhost:4000/2014/12/21/test/"/>
    <id>http://localhost:4000/2014/12/21/test/</id>
    <published>2014-12-21T05:59:30.000Z</published>
    <updated>2014-12-21T06:18:08.000Z</updated>
    <content type="html"><![CDATA[<h3 id="test">test</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="javadoc">/**</span></div><div class="line"> * Created by jianxin on 14-10-29.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">var</span> http = require(<span class="symbol">'htt</span>p');</div><div class="line"></div><div class="line">http.createServer(function(req, res){</div><div class="line">    res.writeHead(<span class="number">200</span>, {<span class="symbol">'Content</span>-Type' :<span class="symbol">'text</span>/plain'});</div><div class="line">    res.end(<span class="symbol">'Hello</span> world! \n');</div><div class="line"></div><div class="line">}).listen(Math.round((<span class="number">1</span> + Math.random()) * <span class="number">1000</span>),<span class="symbol">'127</span><span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>');</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[本页的描述]]>
    
    </summary>
    
  </entry>
  
</feed>
